import { VerticalBox, HorizontalBox, LineEdit, TextEdit, ScrollView } from "std-widgets.slint";

export component MainWindow inherits Window {
    title: "applydiff   |   Fuzzy Patch Applier";
    background: #0d0d0d;
    
    in-out property <string> target_dir: "";
    in-out property <string> patch_input: "";
    in-out property <string> log_output: "";
    in-out property <string> diff_output: "";
    in-out property <bool>   is_processing: false;
    
    callback pick_folder();
    callback preview_patch();
    callback apply_patch();
    callback run_self_test();
    callback copy_ai_prompt();
    callback copy_output();
    callback load_demo();
    callback open_latest_backup();
    callback restore_latest_backup();
    
    VerticalBox {
        padding: 24px;
        spacing: 20px;
        
        // Top row
        HorizontalBox {
            spacing: 12px;
            alignment: center;
            height: 50px;
            
            Rectangle {
                background: #1a1a1a;
                border-radius: 8px;
                border-width: 1px;
                border-color: #333;
                horizontal-stretch: 1;
                
                LineEdit {
                    text <=> target_dir;
                    read-only: true;
                    placeholder-text: "Select a directory to patch…";
                    font-size: 13px;
                }
            }
            
            Rectangle {
                width: 110px;
                top-browse-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { pick_folder(); }
                }
                states [
                    hover when top-browse-ta.has-hover && !is_processing: {
                        top-browse-txt.color: #ffffff;
                        top-browse-bg.opacity: 1;
                    }
                ]
                top-browse-bg := Rectangle {
                    opacity: 0;
                    background: #333;
                    border-radius: 6px;
                }
                top-browse-txt := Text {
                    text: "📁 Browse";
                    color: is_processing ? #555 : #aaa;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle {
                width: 120px;
                top-test-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { run_self_test(); }
                }
                states [
                    hover when top-test-ta.has-hover && !is_processing: {
                        top-test-txt.color: #ffffff;
                        top-test-bg.opacity: 1;
                    }
                ]
                top-test-bg := Rectangle {
                    opacity: 0;
                    background: #333;
                    border-radius: 6px;
                }
                top-test-txt := Text {
                    text: "🧪 Self-Test";
                    color: is_processing ? #555 : #aaa;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle {
                width: 130px;
                top-prompt-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { copy_ai_prompt(); }
                }
                states [
                    hover when top-prompt-ta.has-hover && !is_processing: {
                        top-prompt-txt.color: #ffffff;
                        top-prompt-bg.opacity: 1;
                    }
                ]
                top-prompt-bg := Rectangle {
                    opacity: 0;
                    background: #333;
                    border-radius: 6px;
                }
                top-prompt-txt := Text {
                    text: "📋 AI Prompt";
                    color: is_processing ? #555 : #aaa;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
        }
        
        // Patch input - DARK with proper sizing
        VerticalBox {
            spacing: 8px;
            
            Text { 
                text: "PATCH INPUT"; 
                color: #666;
                font-size: 11px;
                font-weight: 700;
                letter-spacing: 1px;
            }
            
            TextEdit {
                text <=> patch_input;
                wrap: TextWrap.word-wrap;
                enabled: !is_processing;
                font-size: 12px;
                vertical-stretch: 3;
                min-height: 200px;
            }
        }
        
        // Output
        VerticalBox {
            spacing: 8px;
            
            Text { 
                text: "OUTPUT"; 
                color: #666;
                font-size: 11px;
                font-weight: 700;
                letter-spacing: 1px;
            }
            
            Rectangle {
                background: #0a0a0a;
                border-radius: 6px;
                border-width: 1px;
                border-color: #222;
                vertical-stretch: 2;
                min-height: 140px;
                
                ScrollView {
                    VerticalLayout {
                        padding: 12px;
                        Text {
                            text: log_output;
                            color: #d0d0d0;
                            font-size: 12px;
                            wrap: word-wrap;
                            horizontal-alignment: left;
                        }
                    }
                }
            }
        }
        
        // Diff preview
        VerticalBox {
            spacing: 12px;
            
            Text { 
                text: "DIFF PREVIEW"; 
                color: #666;
                font-size: 11px;
                font-weight: 700;
                letter-spacing: 1px;
            }
            
            HorizontalBox {
                spacing: 8px;
                alignment: start;
                
                Rectangle {
                    width: 55px;
                    height: 55px;
                    border-radius: 6px;
                    border-width: 2px;
                    border-color: #333;
                    Text {
                        text: "V1";
                        color: #666;
                        font-size: 14px;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
                
                Rectangle {
                    width: 55px;
                    height: 55px;
                    border-radius: 6px;
                    border-width: 2px;
                    border-color: #333;
                    Text {
                        text: "V2";
                        color: #666;
                        font-size: 14px;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
                
                Rectangle {
                    width: 55px;
                    height: 55px;
                    border-radius: 6px;
                    border-width: 2px;
                    border-color: #3b9eff;
                    background: #3b9eff;
                    Text {
                        text: "V3";
                        color: #ffffff;
                        font-size: 14px;
                        font-weight: 700;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
                
                Rectangle {
                    width: 55px;
                    height: 55px;
                    border-radius: 6px;
                    border-width: 2px;
                    border-color: #333;
                    Text {
                        text: "V4";
                        color: #666;
                        font-size: 14px;
                        horizontal-alignment: center;
                        vertical-alignment: center;
                    }
                }
            }
            
            Rectangle {
                background: #0a0a0a;
                border-radius: 6px;
                border-width: 1px;
                border-color: #222;
                vertical-stretch: 2;
                min-height: 180px;
                
                ScrollView {
                    VerticalLayout {
                        padding: 12px;
                        Text {
                            text: diff_output;
                            color: #d0d0d0;
                            font-size: 11px;
                            wrap: no-wrap;
                            horizontal-alignment: left;
                        }
                    }
                }
            }
        }
        
        // Bottom buttons
        HorizontalBox {
            spacing: 18px;
            height: 48px;
            
            Rectangle {
                width: 95px;
                browse-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { pick_folder(); }
                }
                states [
                    hover when browse-ta.has-hover && !is_processing: {
                        browse-txt.color: #ffffff;
                        browse-bg.opacity: 1;
                    }
                ]
                browse-bg := Rectangle {
                    opacity: 0;
                    background: #2a2a2a;
                    border-radius: 6px;
                }
                browse-txt := Text {
                    text: "📁 Browse";
                    color: is_processing ? #444 : #999;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle {
                width: 110px;
                prompt-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { copy_ai_prompt(); }
                }
                states [
                    hover when prompt-ta.has-hover && !is_processing: {
                        prompt-txt.color: #ffffff;
                        prompt-bg.opacity: 1;
                    }
                ]
                prompt-bg := Rectangle {
                    opacity: 0;
                    background: #2a2a2a;
                    border-radius: 6px;
                }
                prompt-txt := Text {
                    text: "📋 AI Prompt";
                    color: is_processing ? #444 : #999;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle {
                width: 95px;
                preview-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { preview_patch(); }
                }
                states [
                    hover when preview-ta.has-hover && !is_processing: {
                        preview-txt.color: #ffffff;
                        preview-bg.opacity: 1;
                    }
                ]
                preview-bg := Rectangle {
                    opacity: 0;
                    background: #2a2a2a;
                    border-radius: 6px;
                }
                preview-txt := Text {
                    text: "👁 Preview";
                    color: is_processing ? #444 : #999;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle {
                width: 120px;
                apply-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { apply_patch(); }
                }
                states [
                    hover when apply-ta.has-hover && !is_processing: {
                        apply-bg.background: #5eb3ff;
                    }
                ]
                apply-bg := Rectangle {
                    background: is_processing ? #444 : #3b9eff;
                    border-radius: 6px;
                }
                Text {
                    text: "Apply patch";
                    color: #ffffff;
                    font-size: 13px;
                    font-weight: 700;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            Rectangle { horizontal-stretch: 1; }
            
            Rectangle {
                width: 85px;
                demo-ta := TouchArea {
                    enabled: !is_processing;
                    clicked => { load_demo(); }
                }
                states [
                    hover when demo-ta.has-hover && !is_processing: {
                        demo-txt.color: #ffffff;
                        demo-bg.opacity: 1;
                    }
                ]
                demo-bg := Rectangle {
                    opacity: 0;
                    background: #2a2a2a;
                    border-radius: 6px;
                }
                demo-txt := Text {
                    text: "🎛 Demo";
                    color: is_processing ? #444 : #999;
                    font-size: 13px;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
        }
    }
}