import { Button, TextEdit } from "std-widgets.slint";

/* Reusable card chrome */
component Card inherits Rectangle {
    background: #111111;
    border-color: #e7b56f;
    border-width: 2px;
    border-radius: 10px;
}

export component MainWindow inherits Window {
    preferred-width: 1120px;
    preferred-height: 720px;
    min-width: 900px;
    min-height: 600px;

    /* Replace the default Windows icon */
    icon: @image-url("applydiff_logo.svg");
    title: "";

    /* App state (Rust) */
    in-out property <string> target_dir;
    in-out property <string> patch_input;
    in-out property <string> diff_output;
    in-out property <string> log_output;
    in-out property <bool>   is_processing;

    /* UI state */
    in-out property <bool>   show_console: true;
    in-out property <int>    selected_version: 1;     // exactly one active
    in-out property <length> console_width: 360px;    // resized via drag
    in-out property <length> console_min: 260px;
    in-out property <length> console_max: 640px;

    /* Callbacks (Rust) */
    callback pick_folder();
    callback load_demo();
    callback preview_patch();
    callback apply_patch();
    callback run_self_test();
    callback copy_ai_prompt();
    callback copy_output();

    /* Layout: left main column + splitter + right console */
    HorizontalLayout {
        spacing: 12px;
        padding: 12px;

        /* ============== LEFT: MAIN ============== */
        VerticalLayout {
            spacing: 12px;
            horizontal-stretch: 1;

            /* Header pinned left: logo + buttons */
            HorizontalLayout {
                spacing: 8px;

                Image {
                    source: @image-url("applydiff_logo.svg");
                    height: 28px;   // keeps aspect
                }
                Button { text: "Browse";  enabled: !root.is_processing; clicked => { root.pick_folder(); } }
                Button { text: "Console"; enabled: !root.is_processing; clicked => { root.show_console = !root.show_console; } }
                Button { text: "Demo";    enabled: !root.is_processing; clicked => { root.load_demo(); } }
            }

            /* PATCH editor — same chrome as diff */
            Card {
                VerticalLayout {
                    spacing: 8px; padding: 10px;
                    Text { text: "PATCH"; color: #e7b56f; font-size: 12px; }

                    TextEdit {
                        text <=> root.patch_input;
                        enabled: !root.is_processing;
                        font-size: 13px;
                        min-height: 220px;
                    }
                }
            }

            /* Actions */
            HorizontalLayout {
                spacing: 12px;

                Button {
                    text: "👁 Preview";
                    enabled: !root.is_processing && root.target_dir != "" && root.patch_input != "";
                    clicked => { root.preview_patch(); }
                }
                Button {
                    text: "Apply Patch";
                    enabled: !root.is_processing && root.target_dir != "" && root.patch_input != "";
                    clicked => { root.apply_patch(); }
                }
                Button {
                    text: "AI Prompt";
                    enabled: !root.is_processing;
                    clicked => { root.copy_ai_prompt(); }
                }
            }

            /* DIFF PREVIEW */
            Text { text: "DIFF PREVIEW"; color: #e7b56f; font-size: 12px; }

            Card {
                VerticalLayout {
                    spacing: 8px; padding: 10px;

                    /* radio-like tabs: one always selected */
                    HorizontalLayout {
                        spacing: 8px;
                        Button { text: "V1"; enabled: root.selected_version != 1; clicked => { root.selected_version = 1; } }
                        Button { text: "V2"; enabled: root.selected_version != 2; clicked => { root.selected_version = 2; } }
                        Button { text: "V3"; enabled: root.selected_version != 3; clicked => { root.selected_version = 3; } }
                    }

                    TextEdit {
                        text <=> root.diff_output;
                        enabled: false;  // read-only
                        font-size: 12px;
                        min-height: 220px;
                    }
                }
            }
        }

        /* ============== SPLITTER: draggable handle (1.13-safe) ============== */
        if (root.show_console) : Rectangle {
            width: 6px;
            background: #2a2a2a;
            border-color: #444;
            border-width: 1px;
            border-radius: 3px;

            TouchArea {
                mouse-cursor: col-resize;

                /* lazy-init on first move while pressed */
                property <bool>   dragging: false;
                property <length> start_x: 0px;
                property <length> start_w: 0px;

                moved => {
                    if (self.pressed) {
                        if (!dragging) {
                            start_x = self.mouse-x;
                            start_w = root.console_width;
                            dragging = true;
                        }
                        let delta = self.mouse-x - start_x;
                        let raw   = start_w - delta;
                        /* clamp */
                        root.console_width =
                            max(root.console_min, min(root.console_max, raw));
                    } else {
                        dragging = false;
                    }
                }
            }
        }

        /* ============== RIGHT: CONSOLE ============== */
        if (root.show_console) : Rectangle {
            width: root.console_width;
            background: #151515;
            border-color: #333;
            border-width: 1px;
            border-radius: 8px;

            VerticalLayout {
                padding: 10px; spacing: 6px;

                Text { text: "CONSOLE"; color: #e7b56f; font-size: 12px; }

                TextEdit {
                    text <=> root.log_output;
                    enabled: false;   // read-only
                    font-size: 12px;
                    vertical-stretch: 1;
                    min-height: 120px;
                }

                Button { text: "Run Self-Test"; enabled: !root.is_processing; clicked => { root.run_self_test(); } }
            }
        }
    }
}
